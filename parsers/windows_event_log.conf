// Parser for Scalyr Agent metrics logs.

{
  // Sample input text:
  //
  // 2014-05-27 23:20:39.587Z [linux_system_metrics()] proc.stat.cpu 56175301 type="system"

  // Tag these entries as source=tsdb, to match events generated by the old (Java-based) Scalyr agent.
  attributes: {
    source: "tsdb"
  },

  patterns: {
    // Special case to also make sure we match last key=value pair where a value is non-quoted
    // (e.g. an integer). If we don't handle that here, last key=value pair will have \n appended
    // to the parsed value which will is not really desired since that would make any integer a
    // string - e.g. "0\n".
    // Here is an example of such line:
    //
    // 2021-01-10 15:38:13.394Z [shell_monitor(mdadm_degraded)] output "" command="mdadm -D /dev/md0 | grep -i degraded" length=0\n
    //
    // Keep in mind that this issue doesn't affect quoted values.
    nonQuoted: "[^\"\n ]+"
  },

  formats: [
    {
      format: ".*Subject.*Account Name:\\\\t\\\\t$Account_Name$\\\\r\\\\n",
    },
    {
      format: ".*Subject.*Account Domain:\\\\t\\\\t$Account_Domain$\\\\r\\\\n",
    },
    {
      format: ".*Subject.*Logon ID:(\\\\t)+$Logon_Id$[\\\\r\\\\n]+",
    },
    {
      format: ".*Logon Information:.*Logon Type:(\\\\t)+$logon_Information$[\\\\r\\\\n]+",
    },
    {
      format: ".*Logon Information:.*Restricted Admin Mode:(\\\\t)+$Restricted_Admin_Mode$[\\\\r\\\\n]+",
    },
    {
      format: ".*Logon Information:.*Virtual Account:\\\\t\\\\t$Virtual_Account$\\\\r\\\\n\\\\t",
    },
    {
      format: ".*Logon Information:.*Elevated Token:(\\\\t)+$Elevated_Token$[\\\\r\\\\n]+",
    },
    {
      format: ".*Impersonation Level:(\\\\t)+$Impersonation_Level$\\\\r\\\\n\\\\r",
    },
    {
      format: ".*New Logon:.*Security ID:(\\\\t)+$New_Logon_Security_ID$\\\\r\\\\n\\\\t",
    },
    {
      format: ".*New Logon:.*Account Name:(\\\\t)+$New_Logon_Account_Name$\\\\r\\\\n\\\\t",
    },
    {
      format: ".*New Logon:.*Account Domain:(\\\\t)+$New_Logon_Account_Domain$\\\\r\\\\n\\\\t",
    },
    {
      format: ".*New Logon:.*Logon ID:(\\\\t)+$New_Logon_Logon_ID$\\\\r\\\\n\\\\t",
    },
    {
      format: ".*New Logon:.*Linked Logon ID:(\\\\t)+$New_Logon_Linked_Logon_ID$\\\\r\\\\n\\\\t",
    },
    {
      format: ".*New Logon:.*Network Account Name:(\\\\t)+$New_Logon_Network_Account_Name$\\\\r\\\\n\\\\t",
    },
    {
      format: ".*New Logon:.*Network_Account_Domain:(\\\\t)+$New_Logon_Network_Account_Domain$\\\\r\\\\n\\\\t",
    },
    {
      format: ".*New Logon:.*Logon GUID:(\\\\t)+$New_Logon_Network_Account_Domain$\\\\r\\\\n(\\\\t|\\\\r)",
    },
    {
      format: ".*Process Information:.*Process ID:(\\\\t)+$Process_ID$\\\\r\\\\n(\\\\t|\\\\r)",
    },
    {
      format: ".*Process Information:.*Process Name:(\\\\t)+$Process_Name$\\\\r\\\\n(\\\\t|\\\\r)",
    },
    {
      format: ".*Network Information:.*Workstation Name:(\\\\t)+$Workstation_Name$\\\\r\\\\n(\\\\t|\\\\r)",
    },
    {
      format: ".*Network Information:.*Source Network Address:(\\\\t)+$Source_Network_Address$\\\\r\\\\n(\\\\t|\\\\r)",
    },
    {
      format: ".*Network Information:.*Source Port:(\\\\t)+$Source_Port$\\\\r\\\\n(\\\\t|\\\\r)",
    },
    {
      format: ".*Detailed Authentication Information:.*Logon Process:(\\\\t)+$Logon_Process$\\\\r\\\\n(\\\\t|\\\\r)",
    },
    {
      format: ".*Detailed Authentication Information:.*Authentication Package:(\\\\t)+$Authentication_Package$\\\\r\\\\n(\\\\t|\\\\r)",
    },
    {
      format: ".*Detailed Authentication Information:.*Transited Services:(\\\\t)+$Transited_Services$\\\\r\\\\n(\\\\t|\\\\r)",
    },
    {
      format: ".*Detailed Authentication Information:.*Package Name \\(NTLM only\\):(\\\\t)+$Package_Name_NTLM_only$\\\\r\\\\n(\\\\t|\\\\r)",
    },
    {
      format: ".*Detailed Authentication Information:.*Key Length:(\\\\t)+$Key_Length$\\\\r\\\\n(\\\\t|\\\\r)",
    },
    {
      format: ".* $_=identifier$=\"$_$\"", repeat: true
    },
    {
      format: ".* $_=identifier$=$_=nonQuoted$", repeat: true
    },
    // Parse the basic line format. This variant matches lines that have at least one key=value pair --
    // note the trailing space character in the format string, which won't match if there are no key=value
    // pairs. We specify halt: true, to avoid falling through to the next format when this format matches.
    {
      format: "$timestamp$ \\[$monitor$\\($instance$\\)\\] $metric$ $value$ ",
      halt: true
    },
    
    // This variant parses the basic line format when there are no key=value pairs. We don't want to use
    // this variant when there are key=value pairs, because it would include them as part of the "value" field.
    {
      format: "$timestamp$ \\[$monitor$\\($instance$\\)\\] $metric$ $value$",
      halt: true
    }
  ]
}
