{
  attributes: {
    "dataSource.category": "security",
  },
  formats: [
    {
        format: ".*published",
        attributes: {
            "category_uid":"3",
            "category_name":"Audit Activity",
            "class_uid":"3006",
            "class_name":"Access Activity",
            "severity_id":"99",
            "activity_id":"99",
            "type_uid":"300699",
            "metadata.product.vendor_name":"Okta",
            "metadata.product.name":"Okta",
            "metadata.version":"1.0.0-rc.2",
        },
    },
    {
      format: ".*${parse=dottedJson}{attrBlacklist=(legacyEventType|detailEntry|type|authenticationStep|target|request|userId|timeUnit|timeSpan|threshold|requestId|rateLimitSecondsToReset|rateLimitScopeType|rateLimitBucketUuid|dtHash|securityContext|requestApiTokenId)}$"
       rewrites: [ 
         {
           input:   "actor.alternateId", 
           output:  "actor.user.email_addr",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "actor.displayName",
           output:  "actor.user.name",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "actor.id",
           output:  "actor.user.uid",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "actor.type",
           output:  "actor.user.type",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "authenticationContext.externalSession",
           output:  "actor.session.uid",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "authenticationcontext.issuer.id",
           output:  "actor.idp.uid",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "authenticationContext.issuer.type",
           output:  "actor.idp.name",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "authenticationContext.authenticationProvider",
           output:  "actor.authorization.provider",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "client.device",
           output:  "device.name",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "client.id",
           output:  "device.uid",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "client.ipAddress",
           output:  "device.ip",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "client.userAgent.browser",
           output:  "device.browser",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "client.userAgent.os",
           output:  "device.os.name",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "client.userAgent.rawUserAgent",
           output:  "http_request.user_agent",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "client.zone",
           output:  "device.location.zone",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "client.geographicalContext.city",
           output:  "device.location.city",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "client.geographicalContext.country",
           output:  "device.location.country",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "client.geographicalContext.geolocation.lat",
           output:  "device.location.geo_coordinates.latitude",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "client.geographicalContext.geolocation.lon",
           output:  "device.location.geo_coordinates.longitude",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "client.geographicalContext.postalCode",
           output:  "device.location.postal_code",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "client.geographicalContext.state",
           output:  "device.location.region",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "debugContext.debugData.requestUri",
           output:  "http_request.url.path",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "displayMessage",
           output:  "message",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "eventType",
           output:  "activity_name",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "outcome.result",
           output:  "status",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "outcome.reason",
           output:  "status_detail",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "published",
           output:  "time",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "transaction.id",
           output:  "metadata.correlation_uid",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "version",
           output:  "metadata.version",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "uuid",
           output:  "metadata.uid",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "severity",
           output:  "severity",
           match:   ".*",
           replace: "$0"
         },
         {
           input:   "debugContext.debugData.url",
           output:  "http_request.url.query_string",
           match:   ".*",
           replace: "$0"
         },
         
       ]
    }
  ]
}
