// Parser for Darktrace alerts via HEC. Add formats to dottedJson parser. Reference https://darktrace.com/legal/splunk-connector

{
  attributes: {
    // Tag all events parsed with this parser so we can easily select them in queries.
    dataset: "json"
  },
  formats: [
    {
      format: "${parse=dottedJson}$",
      // discardAttributes: ["message"],   // uncomment to drop the raw message after parsing it
      repeat: true
    }, {
      id: "darktrace_model_breach", //Reference https://darktrace.com/legal/splunk-connector
      format: ".*darktrace[\\w|-]+\\\\\/#modelbreach\\\\\/.*", //"breachUrl":"https:\/\/darktrace-abc1-0001-01\/#modelbreach\/12345"
      halt: true,
      attributes: {
        "dataSource.category": "security",
        "dataSource.name": "Darktrace",
        "dataSource.vendor": "Darktrace",
        "category_name": "Findings",
        "category_uid": 2,
        "class_name": "Security Finding",
        "class_uid": 2001,
        "activity_id": 2,
        "status": 200102,
        "event.type": "Model Breach"
      },
      rewrites: [
        {
          input: "time",
          output: "timestamp",
          match: ".*",
          replace: "$0"
        }, {
          input: "creationTime",
          output: "finding.created_time",
          match: ".*",
          replace: "$0"
        }, {
          input: "model.description",
          output: "finding.desc",
          match: ".*",
          replace: "$0"
        }, {
          input: "breachUrl",
          output: "finding.src_url",
          match: ".*",
          replace: "$0"
        }, {
          input: "model.name",
          output: "finding.title",
          match: ".*",
          replace: "$0"
        }, {
          input: "pbid",
          output: "finding.uid",
          match: ".*",
          replace: "$0"
        }, {
          input: "score",
          output: "severity_id",
          match: "0$|(0\\.1\\d+)|(0\\.2[0-4]\\d*)",
          replace: 2
        }, {
          input: "score",
          output: "severity_id",
          match: "(0\\.2[5-9]\\d*)|(0\\.3\\d+)|(0\\.4\\d+)",
          replace: 3
        }, {
          input: "score",
          output: "severity_id",
          match: "(0\\.5\\d*)|(0\\.6\\d+)|(0\\.7[0-4]\\d*)",
          replace: 4
        }, {
          input: "score",
          output: "severity_id",
          match: "(0\\.7[5-9]\\d*)|(0\\.8\\d+)|(0\\.9\\d+)|(1\\.\\d*)",
          replace: 5
        }, {
          input: "triggeredComponents",
          output: "evidence",
          match: ".*",
          replace: "$0"
        }, {
          input: "device.hostname",
          output: "endpoint.name",
          match: ".*",
          replace: "$0"
        }, {
          input: "device.ip",
          output: "src.ip.address",
          match: ".*",
          replace: "$0"
        }
      ]
    }, {
      id: "darktrace_ai_analyst", //Reference https://darktrace.com/legal/splunk-connector
      format: ".*darktrace[\\w|-]+\\\\\/saas#aiincident\\\\\/.*", //https:\/\/darktrace-abc1-0001-01\/saas#aiincident\/12345
      halt: true,
      attributes: {
        "dataSource.category": "security",
        "dataSource.name": "Darktrace",
        "dataSource.vendor": "Darktrace",
        "category_name": "Findings",
        "category_uid": 2,
        "class_name": "Security Finding",
        "class_uid": 2001,
        "activity_id": 2,
        "status": 200102,
        "event.type": "AI Analyst"
      },
      rewrites: [
        {
          input: "periods",
          output: "timestamp",
          match: "\\[\\{\"start\":\\d+\\,\"end\":(\\d+)\\}\\]",
          replace: "$1"
        }, {
          input: "periods",
          output: "finding.created_time",
          match: "\\[\\{\"start\":\\d+\\,\"end\":(\\d+)\\}\\]",
          replace: "$1"
        }, {
          input: "summary",
          output: "finding.desc",
          match: ".*",
          replace: "$0"
        }, {
          input: "url",
          output: "finding.src_url",
          match: ".*",
          replace: "$0"
        }, {
          input: "title",
          output: "finding.title",
          match: ".*",
          replace: "$0"
        }, {
          input: "id",
          output: "finding.uid",
          match: ".*",
          replace: "$0"
        }, {
          input: "groupCategory",
          output: "severity_id",
          match: "Low",
          replace: 2
        }, {
          input: "groupCategory",
          output: "severity_id",
          match: "Medium",
          replace: 3
        }, {
          input: "groupCategory",
          output: "severity_id",
          match: "High",
          replace: 4
        }, {
          input: "details",
          output: "evidence",
          match: ".*",
          replace: "$0"
        }, {
          input: "details",
          output: "endpoint.name",
          match: ".*\"hostname\":\"([^\"]+).*",
          replace: "$1"
        }, {
          input: "details",
          output: "src.ip.address",
          match: ".*\"ip\":\"([^\"]+).*",
          replace: "$1"
        }
      ]
    }, {
      id: "darktrace_system", //Reference https://darktrace.com/legal/splunk-connector
      format: ".*darktrace[\\w|-]+\\\\\/sysstatus\\?alert=.*", //https:\/\/darktrace-abc1-0001-01\/sysstatus?alert=123a456b-78c9-0de1-23f4-ghi5jklm6789
      halt: true,
      attributes: {
        "dataSource.category": "security",
        "dataSource.name": "Darktrace",
        "dataSource.vendor": "Darktrace",
        "category_name": "Findings",
        "category_uid": 2,
        "class_name": "Security Finding",
        "class_uid": 2001,
        "event.type": "System Status"
      },
      rewrites: [
        {
          input: "last_updated",
          output: "timestamp",
          match: ".*",
          replace: "$0"
        }, {
          input: "status",
          output: "activity_id",
          match: "Active",
          replace: 2
        }, {
          input: "status",
          output: "activity_id",
          match: "Resolved",
          replace: 3
        }, {
          input: "creationTime",
          output: "finding.created_time",
          match: ".*",
          replace: "$0"
        }, {
          input: "name",
          output: "finding.desc",
          match: ".*",
          replace: "$0"
        }, {
          input: "last_updated",
          output: "finding.modified_time",
          match: ".*",
          replace: "$0"
        }, {
          input: "url",
          output: "finding.src_url",
          match: ".*",
          replace: "$0"
        }, {
          input: "alert_name",
          output: "finding.title",
          match: ".*",
          replace: "$0"
        }, {
          input: "uuid",
          output: "finding.uid",
          match: ".*",
          replace: "$0"
        }, {
          input: "priority_level",
          output: "severity_id",
          match: "Informational",
          replace: 99
        }, {
          input: "priority_level",
          output: "severity_id",
          match: "Low",
          replace: 1
        }, {
          input: "priority_level",
          output: "severity_id",
          match: "Medium",
          replace: 2
        }, {
          input: "priority_level",
          output: "severity_id",
          match: "High",
          replace: 3
        }, {
          input: "priority_level",
          output: "severity_id",
          match: "Critical",
          replace: 4
        }, {
          input: "status",
          output: "state_id",
          match: "Active",
          replace: 2
        }, {
          input: "status",
          output: "state_id",
          match: "Resolved",
          replace: 4
        }, {
          input: "status",
          output: "state_id",
          match: "Active",
          replace: 200102
        }, {
          input: "status",
          output: "state_id",
          match: "Resolved",
          replace: 200103
        }, {
          input: "message_",
          output: "evidence",
          match: ".*",
          replace: "$0"
        }, {
          input: "hostname",
          output: "endpoint.name",
          match: ".*",
          replace: "$0"
        }, {
          input: "ip_address",
          output: "src.ip.address",
          match: ".*",
          replace: "$0"
        }
      ]
    }
  ]
}
