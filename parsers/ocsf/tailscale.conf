// Parser for Tailscale logs via HEC. Add formats to parser dottedJson. Reference https://tailscale.com/kb/1255/log-streaming

{
  attributes: {
    // Tag all events parsed with this parser so we can easily select them in queries.
    dataset: "json"
  },
  formats: [
    {
      format: "${parse=dottedJson}$",
      // discardAttributes: ["message"],   // uncomment to drop the raw message after parsing it
      repeat: true
    }, {
      id: "tailscale_logstream_config",
      format: "^\\{\"eventGroupID.*",  //https://tailscale.com/kb/1203/audit-logging
      attributes: {
        "dataSource.category": "security",
        "dataSource.name": "Tailscale VPN",
        "dataSource.vendor": "Tailscale",
        "category_name": "Identity & Access Management",
        "category_uid": 3,
        "class_name": "entity_management",
        "class_uid": 3004,
        "event.type": "Configuration",
        "severity_id": 1
      },
      repeat: true,
      rewrites: [
        {
          input: "new",
          output: "timestamp",
          match: ".*",
          replace: "$0"
        }, {
          input: "new",
          output: "end_time",
          match: ".*",
          replace: "$0"
        }, {
          input: "action",
          output: "UPDATE",
          match: ".*",
          replace: 3
        }, {
          input: "actor.displayName",
          output: "actor.user.name",
          match: ".*",
          replace: "$0"
        }, {
          input: "actor.loginName",
          output: "actor.user.email_addr",
          match: ".*",
          replace: "$0"
        }, {
          input: "actor.id",
          output: "actor.user.uid",
          match: ".*",
          replace: "$0"
        }, {
          input: "actor.type",
          output: "actor.user.type",
          match: ".*",
          replace: "$0"
        }, {
          input: "old",
          output: "start_time",
          match: ".*",
          replace: "$0"
        }, {
          input: "origin",
          output: "metadata.origin",
          match: ".*",
          replace: "$0"
        }, {
          input: "target.name",
          output: "entity.name",
          match: "UPDATE",
          replace: "$0"
        }, {
          input: "target.property",
          output: "unmapped.target.property",
          match: "UPDATE",
          replace: "$0"
        }, {
          input: "target.id",
          output: "target.uid",
          match: "UPDATE",
          replace: "$0"
        }, {
          input: "target.type",
          output: "target.type",
          match: "UPDATE",
          replace: "$0"
        }
      ]
    }, {
      id: "tailscale_logstream_network",
      format: "^\\{\"start.*nodeId.*|^\\{\"exitTraffic.*",  //reference https://tailscale.com/kb/1219/network-flow-logs
      attributes: {
        "dataSource.category": "security",
        "dataSource.name": "Tailscale VPN",
        "dataSource.vendor": "Tailscale",
        "activity_id": 6,
        "category_name": "Network Activity",
        "category_uid": 4,
        "class_name": "network_activity",
        "class_uid": 4001,
        "event.type": "Network Flow",
        "severity_id": 1
      },
      repeat: true,
      rewrites: [
        {
          input: "end",
          output: "end_time",
          match: ".*",
          replace: "$0"
        }, {
          input: "start",
          output: "timestamp",
          match: ".*",
          replace: "$0"
        }, {
          input: "start",
          output: "start_time",
          match: ".*",
          replace: "$0"
        }, {
          input: "recorded",
          output: "timestamp",
          match: ".*",
          replace: "$0"
        }, {
          input: "nodeId",
          output: "src_endpoint",
          match: ".*",
          replace: "$0"
        }, {
          input: "nodeId",
          output: "event.source",
          match: ".*",
          replace: "$0"
        }, {
          input: "physicalTraffic",
          output: "unmapped.physicalTraffic",
          match: ".*",
          replace: "$0"
        }, {
          input: "subnetTraffic",
          output: "unmapped.subnetTraffic",
          match: ".*",
          replace: "$0"
        }, {
          input: "virtualTraffic",
          output: "unmapped.virtualTraffic",
          match: ".*",
          replace: "$0"
        }
      ]
    }
  ]
}
