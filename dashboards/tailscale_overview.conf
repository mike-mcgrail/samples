{
  graphs: [
    {
      barWidth: "auto",
      breakdownFacet: "event.type",
      graphStyle: "stacked_bar",
      plots: [
        {
          filter: "dataSource.category='security' dataSource.vendor='Tailscale'",
          label: "Rate"
        }
      ],
      title: "Tailscale Overview",
      yScale: "linear",
      layout: {
        h: 14,
        w: 60,
        x: 0,
        y: 0
      }
    }, {
      query: "dataSource.category='security' dataSource.vendor='Tailscale' nodeId=* physicalTraffic=*\n| let nodeTraffic = array_from_json(physicalTraffic) \n| let total_rxPackets = array_reduce(array_map(nodeTraffic, func(x) -> json_object_value(x, 'rxPkts')), 0, func(x,y) -> x+y) \n| let total_txPackets = array_reduce(array_map(nodeTraffic, func(x) -> json_object_value(x, 'txPkts')), 0, func(x,y) -> x+y)\n| group totalPackets = sum(total_rxPackets + total_txPackets) by nodeId\n| sort - totalPackets",
      title: "Top Hosts",
      layout: {
        h: 14,
        w: 20,
        x: 40,
        y: 14
      }
    }, {
      query: "dataSource.category = 'security' dataSource.vendor='Tailscale' event.type='Configuration'\n| group count=count() by action\n| sort - count",
      title: "Top Events",
      layout: {
        h: 14,
        w: 20,
        x: 0,
        y: 14
      },
      graphStyle: "donut",
      maxPieSlices: 10
    }, {
      graphStyle: "line",
      lineSmoothing: "straightLines",
      query: "dataSource.category = 'security' dataSource.vendor='Tailscale' nodeId=* physicalTraffic=*\n| let nodeTraffic = array_from_json(physicalTraffic) \n| let total_rxBytes = array_reduce(array_map(nodeTraffic, func(x) -> json_object_value(x, 'rxBytes')), 0, func(x,y) -> x+y) \n| group 'Total KB Rx' = sum(total_rxBytes)/1000 by timestamp = timebucket(), nodeId\n| transpose nodeId on timestamp",
      title: "Physical Traffic Source Activity over time",
      yScale: "linear",
      layout: {
        h: 14,
        w: 30,
        x: 0,
        y: 28
      }
    }, {
      graphStyle: "line",
      lineSmoothing: "straightLines",
      query: "dataSource.category = 'security' dataSource.vendor='Tailscale' nodeId=* physicalTraffic=* \n| let nodeTraffic = array_from_json(physicalTraffic) \n| let total_txBytes = array_reduce(array_map(nodeTraffic, func(x) -> json_object_value(x, 'txBytes')), 0, func(x,y) -> x+y) \n| group 'Total KB Tx' = sum(total_txBytes)/1000 by timestamp = timebucket(), nodeId\n| transpose nodeId on timestamp",
      title: "Physical Traffic Destination Activity over time",
      yScale: "linear",
      layout: {
        h: 14,
        w: 30,
        x: 30,
        y: 28
      }
    }, {
      graphStyle: "line",
      lineSmoothing: "straightLines",
      query: "dataSource.category = 'security' dataSource.vendor='Tailscale' nodeId=* virtualTraffic=*\n| let nodeTraffic = array_from_json(virtualTraffic) \n| let total_txBytes = array_reduce(array_map(nodeTraffic, func(x) -> json_object_value(x, 'txBytes')), 0, func(x,y) -> x+y) \n| group 'Total KB Tx' = sum(total_txBytes)/1000 by timestamp = timebucket(), nodeId\n| transpose nodeId on timestamp",
      title: "Virtual Traffic Destination activity over time",
      yScale: "linear",
      layout: {
        h: 14,
        w: 30,
        x: 30,
        y: 42
      }
    }, {
      graphStyle: "line",
      lineSmoothing: "straightLines",
      query: "dataSource.category = 'security' dataSource.vendor='Tailscale' nodeId=* virtualTraffic=*\n| let nodeTraffic = array_from_json(virtualTraffic) \n| let total_rxBytes = array_reduce(array_map(nodeTraffic, func(x) -> json_object_value(x, 'rxBytes')), 0, func(x,y) -> x+y) \n| group 'Total KB Rx' = sum(total_rxBytes)/1000 by timestamp = timebucket(), nodeId\n| transpose nodeId on timestamp",
      title: "Virtual Traffic Source Activity over time",
      yScale: "linear",
      layout: {
        h: 14,
        w: 30,
        x: 0,
        y: 42
      }
    }, {
      graphStyle: "line",
      lineSmoothing: "straightLines",
      query: "dataSource.category = 'security' dataSource.vendor='Tailscale' nodeId=* exitTraffic=*\n| let nodeTraffic = array_from_json(exitTraffic) \n| let total_txBytes = array_reduce(array_map(nodeTraffic, func(x) -> json_object_value(x, 'txBytes')), 0, func(x,y) -> x+y) \n| group 'Total KB Tx' = sum(total_txBytes)/1000 by timestamp = timebucket(), nodeId\n| transpose nodeId on timestamp",
      title: "Exit Traffic Source Activity over time",
      yScale: "linear",
      layout: {
        h: 14,
        w: 60,
        x: 0,
        y: 56
      }
    }, {
      query: "dataSource.category = 'security' dataSource.vendor='Tailscale' event.type='Configuration' actor.user.name=*\n| group count=count() by actor.user.name\n| sort - count",
      title: "Admin Users",
      layout: {
        h: 14,
        w: 20,
        x: 20,
        y: 14
      }
    }
  ]
}
