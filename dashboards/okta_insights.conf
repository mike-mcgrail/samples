{
  tabs: [{"tabName":"Analytics",
graphs : [
    {
      query: "dataSource.vendor = 'Okta'   auth_protocol = *\n| group count = count () by auth_protocol\n| sort -count\n",
      title: "Authentication Protocol",
      graphStyle: "pie",
      maxPieSlices: 10,
      layout: {
  h: 14,
  w: 20,
  x: 40,
  y: 28
}
    },
    {
      query: "dataSource.vendor = 'Okta'  \n| group count = count () by src_endpoint.location.country\n| sort -count\n\n",
      title: "Requests by Country",
      graphStyle: "pie",
      maxPieSlices: 10,
      layout: {
  h: 14,
  w: 20,
  x: 0,
  y: 14
}
    },
    {
      graphStyle: "pie",
      maxPieSlices: 10,
      query: "dataSource.vendor = 'Okta'  unmapped.client.userAgent.browser= *\n| group count = count () by unmapped.client.userAgent.browser\n| sort -count\n\n",
      title: "Requests by Browser",
      layout: {
  h: 14,
  i: "2",
  minH: 3,
  minW: 6,
  w: 20,
  x: 0,
  y: 28
}
    },
    {
      graphStyle: "pie",
      maxPieSlices: 10,
      query: "dataSource.vendor = 'Okta' \n| group count = count () by unmapped.client.userAgent.os\n| sort -count\n\n",
      title: "Requests by Operating System",
      layout: {
  h: 14,
  i: "3",
  minH: 3,
  minW: 6,
  w: 20,
  x: 40,
  y: 14
}
    },
    {
      graphStyle: "",
      layout: {
  h: 14,
  i: "4",
  minH: 3,
  minW: 6,
  w: 20,
  x: 20,
  y: 28
},
      query: "dataSource.vendor='Okta' unmapped.authenticationContext = * \n| columns unmapped.authenticationContext\n| let authenticationProvider = json_object_value(unmapped.authenticationContext, \"authenticationProvider\")\n| let credentialProvider = json_object_value(unmapped.authenticationContext, \"credentialProvider\")\n| let externalSessionId = json_object_value(unmapped.authenticationContext, \"externalSessionId\")\n| let authenticationStep = json_object_value(unmapped.authenticationContext, \"authenticationStep\")\n| group count() by authenticationProvider, credentialProvider, authenticationStep",
      title: "Authentication Context",
      showBarsColumn: "false"
    ,
    },
    {
      graphStyle: "donut",
      layout: {
  h: 14,
  w: 20,
  x: 0,
  y: 0
},
      maxPieSlices: 10,
      query: "dataSource.vendor = 'Okta'  status=*\n| group count = count () by status\n| sort -count\n",
      title: "Status"
    },
    {
      graphStyle: "pie",
      layout: {
  h: 14,
  w: 20,
  x: 20,
  y: 14
},
      maxPieSlices: 10,
      query: "dataSource.vendor = 'Okta'  unmapped.client.device=*\n| group count = count () by unmapped.client.device\n| sort -count",
      title: "Requests by Device"
    },
    {
      graphStyle: "",
      layout: {
  h: 14,
  w: 40,
  x: 20,
  y: 0
},
      query: "dataSource.vendor = 'Okta'  status_detail=*\n| group count = count () by status_detail\n| sort -count\n",
      title: "Status Details",
      showBarsColumn: "false"
    }
  ],
filters: [
]
},
{"tabName":"Potential Threats","graphs":[
  {
    layout: {
  h: 14,
  i: "0",
  minH: 3,
  minW: 6,
  w: 30,
  x: 0,
  y: 14
},
    query: "dataSource.vendor = 'Okta'  status = 'FAILURE'  actor.user.type = 'User'   \nstatus_detail = 'LOCKED_OUT' \n| group count = count () by status_detail, actor.user.name, actor.user.email_addr\n| sort -count\n| filter count > 2\n\n\n\n",
    title: "Multiple Failed Logins due to LOCKED_OUT",
    graphStyle: "",
    showBarsColumn: "false"
  },
  {
    graphStyle: "",
    layout: {
  h: 14,
  i: "1",
  minH: 3,
  minW: 6,
  w: 27,
  x: 30,
  y: 14
},
    query: "dataSource.vendor = 'Okta'  actor.user.type = 'User'   \nstatus_detail = 'LOCKED_OUT' \n| group count = count () by actor.user.name, actor.user.email_addr, src_endpoint.location.country \n| sort -count\n\n",
    showBarsColumn: "false",
    title: "LOCKED OUT Users by Country"
  },
  {
    graphStyle: "",
    layout: {
  h: 14,
  i: "2",
  minH: 3,
  minW: 6,
  w: 30,
  x: 0,
  y: 0
},
    query: "dataSource.vendor = 'Okta'  status = 'SUCCESS' AND src_endpoint.ip = * AND actor.user.type = 'User' AND NOT(actor.alternateId contains 'svc') AND NOT(debugContext.debugData.url contains '/api') AND NOT(debugContext.debugData.url contains '/api') AND NOT('/oauth2')\n| group count = estimate_distinct(src_endpoint.ip) by actor.user.name, actor.user.email_addr\n| sort -count\n| filter count >= 3\n\n",
    showBarsColumn: "false",
    title: "Authentication Success from 3 or more IPs"
  },
  {
    layout: {
  h: 14,
  i: "3",
  minH: 3,
  minW: 6,
  w: 27,
  x: 30,
  y: 0
},
    query: "dataSource.vendor = 'Okta'  status = 'SUCCESS' AND src_endpoint.ip = * AND actor.user.type = 'User'   AND src_endpoint.location.country= *\n| group count = estimate_distinct(src_endpoint.location.country) by actor.user.name, actor.user.email_addr\n| filter count > 1\n",
    title: "Authentication Success from 2 or more countries ",
    graphStyle: "",
    showBarsColumn: "false"
  }
],
filters: [
]
}],
  configType: "TABBED",
  description: ""
 }
