{
  tabs: [{"tabName":"Analytics",
graphs : [
    {
      query: "dataSource.vendor = 'Okta' status_detail = *\n| group count = count () by status_detail\n| sort -count",
      title: "Results ",
      graphStyle: "pie",
      maxPieSlices: 10,
      layout: {
  h: 14,
  i: "0",
  minH: 3,
  minW: 6,
  w: 20,
  x: 0,
  y: 29
},
      
    },
    {
      query: "dataSource.vendor = 'Okta' src_endpoint.location.region = *\n| group count = count () by src_endpoint.location.region\n| sort -count\n\n",
      title: "Requests by Region",
      graphStyle: "pie",
      maxPieSlices: 10,
      layout: {
  h: 14,
  i: "1",
  minH: 3,
  minW: 6,
  w: 20,
  x: 0,
  y: 0
},
      
    },
    {
      graphStyle: "pie",
      maxPieSlices: 10,
      query: "dataSource.vendor = 'Okta' unmapped.client.userAgent.browser = *\n| group count = count () by unmapped.client.userAgent.browser\n| sort -count\n\n",
      title: "Requests by Browser",
      layout: {
  h: 14,
  i: "2",
  minH: 3,
  minW: 6,
  w: 20,
  x: 0,
  y: 14
},
      
    },
    {
      graphStyle: "pie",
      maxPieSlices: 10,
      query: "dataSource.vendor = 'Okta' 'Okta' unmapped.client.userAgent.os = *\n| group count = count () by  unmapped.client.userAgent.os\n| sort -count\n\n",
      title: "Requests by Operating System",
      layout: {
  h: 14,
  i: "3",
  minH: 3,
  minW: 6,
  w: 20,
  x: 20,
  y: 14
},
      
    },
    {
      graphStyle: "donut",
      layout: {
  h: 14,
  i: "4",
  minH: 3,
  minW: 6,
  w: 20,
  x: 40,
  y: 0
},
      maxPieSlices: 10,
      query: "dataSource.vendor = 'Okta'  \n actor.authorization.policy.rule.name= *\n| group count = count () by actor.authorization.policy.rule.name\n| sort -count\n\n",
      title: "Authentication Policy Rule Name",
      showBarsColumn: "false",
      
    },
    {
      graphStyle: "stacked_bar",
      query: "dataSource.vendor = 'Okta'  status = * \n| group count = count () by status\n| sort -count\n| limit 10",
      title: "Outcome Reasons",
      xAxis: "grouped_data",
      yScale: "linear",
      layout: {
  h: 14,
  w: 40,
  x: 0,
  y: 42
}
    },
    {
      graphStyle: "donut",
      layout: {
  h: 14,
  i: "6",
  minH: 3,
  minW: 6,
  w: 20,
  x: 40,
  y: 14
},
      maxPieSlices: 10,
      query: "dataSource.vendor = 'Okta'  event.type= *\n| group count = count () by event.type\n| sort -count\n\n",
      showBarsColumn: "false",
      title: "Event Types",
      
    },
    {
      graphStyle: "pie",
      layout: {
  h: 14,
  w: 20,
  x: 20,
  y: 0
},
      maxPieSlices: 10,
      query: "dataSource.vendor = 'Okta'  device.uid=*\n| group count = count () by device.uid\n| sort -count\n\n",
      title: "Requests by Device",
      
    },
    {
      graphStyle: "pie",
      layout: {
  h: 14,
  i: "8",
  minH: 3,
  minW: 6,
  w: 20,
  x: 20,
  y: 29
},
      maxPieSlices: 10,
      query: "dataSource.vendor = 'Okta' \n| group count = count () by actor.user.name\n| sort -count\n\n",
      
      title: "Requests by User"
    }
  ],
filters: [
]
},
{"tabName":"Potential Threats","graphs":[
  {
    layout: {
  h: 14,
  i: "0",
  minH: 3,
  minW: 6,
  w: 30,
  x: 0,
  y: 14
},
    query: "dataSource.vendor = 'Okta' status_detail = 'LOCKED_OUT' status= 'FAILURE' \n| group count = count (status = 'FAILURE') by status_detail, actor.user.name, actor.user.email_addr\n| sort -count\n| filter count > 2\n\n\n",
    title: "Multiple Failed Logins due to LOCKED_OUT",
    graphStyle: "",
    showBarsColumn: "false",
    
  },
  {
    graphStyle: "",
    layout: {
  h: 14,
  i: "1",
  minH: 3,
  minW: 6,
  w: 27,
  x: 30,
  y: 0
},
    maxPieSlices: 10,
    query: "dataSource.vendor = 'Okta'  status_detail = 'LOCKED_OUT'  src_endpoint.location.region = * actor.user.type = \"User\" actor.user.name != \"Portal\" !(actor.user.name matches (\"^svc$\")) !(actor.email_addr matches (\"^system@okta.com$\", \"^svc\")) !(src_endpoint.ip matches (\"^192.168\", \"^10.10.\")) !(unmapped.debug_context matches (\"^\\\\\\\\/api\", \"\\\\\\\\/oauth2\"))\n| group count = count () by actor.user.name, actor.user.email_addr, src_endpoint.location.region\n| sort -count",
    showBarsColumn: "false",
    title: "LOCKED OUT Users by Country",
    
  },
  {
    graphStyle: "",
    layout: {
  h: 14,
  i: "2",
  minH: 3,
  minW: 6,
  w: 30,
  x: 0,
  y: 0
},
    query: "dataSource.vendor = 'Okta' AND status = 'SUCCESS' AND src_endpoint.ip = * AND actor.user.type = 'User' AND NOT(unmapped.actor.alternateId contains 'svc') AND NOT(http_request.url.path contains '/api') AND NOT(http_request.url.path contains '/api') AND NOT('/oauth2')\n| group count = estimate_distinct(src_endpoint.ip) by actor.user.name , unmapped.actor.alternateId\n| sort -count\n| filter count >= 3",
    showBarsColumn: "false",
    title: "Authentication Success from 3 or more IPs",
    
  },
  {
    query: "dataSource.name = 'Okta' status = \"SUCCESS\" src_endpoint.location.region = * actor.user.type = \"User\" actor.user.name != \"Portal\" !(actor.user.name matches (\"^svc$\")) !(actor.email_addr matches (\"^system@okta.com$\", \"^svc\")) !(src_endpoint.ip matches (\"^192.168\", \"^10.10.\")) !(unmapped.debug_context matches (\"^\\\\\\\\/api\", \"\\\\\\\\/oauth2\"))\n| group States=estimate_distinct(src_endpoint.location.region) by actor.email_addr, actor.user.name\n| filter States > 2\n| let EmailAddress = actor.email_addr, UserName =actor.user.name\n| columns UserName,EmailAddress, States",
    
    title: "Authentication Success from 2 or more states",
    layout: {
  h: 14,
  i: "3",
  minH: 3,
  minW: 6,
  w: 27,
  x: 30,
  y: 14
},
    graphStyle: "",
    showBarsColumn: "false"
  }
],
filters: [
]
}],
  configType: "TABBED"
 }
