//Generic firewall dashboard
//created for Palo and Cisco, but can be adapted to your firewall. just map your fields in. i.e find and replace destination_address with dst_ip, etc 

{
  graphs: [
    {
      breakdownFacet: "Application",
      graphStyle: "stacked_bar",
      plots: [
  {
    facet: "Bytes_Received",
    filter: "(logfile='/fluentd/PAN-GRA')",
    label: "Bytes_Received"
  }
],
      title: "Bytes Received by Application",
      yScale: "linear",
      layout: {
  h: 14,
  w: 20,
  x: 0,
  y: 14
},
      lineSmoothing: "straightLines"
    },
    {
      barWidth: "5 minutes",
      breakdownFacet: "Application",
      graphStyle: "stacked_bar",
      plots: [
        {
          facet: "Bytes_Sent",
          filter: "(logfile='/fluentd/PAN-GRA')",
          label: "Bytes_Sent"
        }
      ],
      title: "Bytes Sent by Application",
      yScale: "linear",
      layout: {
  h: 14,
  w: 20,
  x: 20,
  y: 42
}
    },
    {
      barWidth: "5 minutes",
      breakdownFacet: "Destination_IP",
      graphStyle: "line",
      plots: [
        {
          facet: "rate",
          filter: "(logfile='/fluentd/PAN-GRA')",
          label: "rate"
        }
      ],
      title: "Requests by IP",
      layout: {
  h: 14,
  w: 20,
  x: 40,
  y: 70
}
    },
    {
      breakdownFacet: "destination_zone",
      graphStyle: "line",
      plots: [
  {
    facet: "rate",
    filter: "(logfile='/fluentd/PAN-GRA') destination_address=*",
    label: "rate"
  }
],
      title: "Requests by Destination Zone",
      layout: {
  h: 14,
  w: 20,
  x: 20,
  y: 0
},
      lineSmoothing: "straightLines"
    },
    {
      barWidth: "5 minutes",
      breakdownFacet: "Destination_User",
      graphStyle: "line",
      plots: [
        {
          facet: "rate",
          filter: "(logfile='/fluentd/PAN-GRA')",
          label: "rate"
        }
      ],
      title: "Requests by Destination User",
      layout: {
  h: 14,
  w: 20,
  x: 20,
  y: 56
}
    },
    {
      barWidth: "5 minutes",
      breakdownFacet: "Category",
      graphStyle: "line",
      plots: [
  {
    facet: "Elapsed_Time",
    filter: "(logfile='/fluentd/PAN-GRA')",
    label: "Elapsed_Time"
  }
],
      title: "Elapsed Time by Category",
      layout: {
  h: 14,
  w: 20,
  x: 40,
  y: 28
}
    },
    {
      query: "parser contains 'GRA' Source_User = * \n| group count = count() by Source_User \n| sort -count\n|limit 20",
      title: "Top Users",
      graphStyle: "pie",
      layout: {
  h: 14,
  w: 20,
  x: 0,
  y: 28
}
    },
    {
      query: "parser contains 'GRA' \n| group count = count() by  Destination_IP \n| sort -count\n|limit 20",
      title: "Breakdown of Destination IPs",
      graphStyle: "donut",
      layout: {
  h: 14,
  w: 20,
  x: 20,
  y: 70
},
      maxPieSlices: 10
    },
    {
      query: "parser contains 'GRA' \n| group count = count() by Application   \n| sort -count\n|limit 20",
      title: "Requests by Applications",
      graphStyle: "donut",
      layout: {
  h: 14,
  w: 20,
  x: 0,
  y: 42
}
    },
    {
      query: "parser contains 'GRA' Bytes_Received = *\n| group count = count() ",
      title: "Total Requests",
      layout: {
  h: 14,
  w: 20,
  x: 20,
  y: 84
}
    },
    {
      query: "parser contains 'GRA' Bytes_Received = *\n| group count = count() ",
      title: "Total Bytes Sent in Timeframe",
      graphStyle: "number",
      layout: {
  h: 7,
  w: 20,
  x: 40,
  y: 7
}
    },
    {
      query: "parser contains 'GRA' Bytes_Sent  = *\n| parse \"$Bytes{regex=\\\\d+}$\" from bytes_sent  \n| group sum = sum(Bytes)\n\n",
      title: "Total Bytes Received in Timeframe",
      graphStyle: "number",
      layout: {
  h: 7,
  w: 20,
  x: 40,
  y: 0
}
    },
    {
      barWidth: "1 minute",
      breakdownFacet: "Destination_Port",
      graphStyle: "stacked_bar",
      plots: [
        {
          facet: "Packets",
          filter: "(logfile='/fluentd/PAN-GRA')",
          label: "Packets"
        }
      ],
      title: "Packets by port",
      yScale: "linear",
      layout: {
  h: 14,
  w: 20,
  x: 0,
  y: 70
}
    },
    {
      barWidth: "1 minute",
      breakdownFacet: "Source_Zone",
      graphStyle: "line",
      plots: [
  {
    facet: "rate",
    filter: "(logfile='/fluentd/PAN-GRA')",
    label: "rate"
  }
],
      title: "Requests by Source Zone",
      layout: {
  h: 14,
  w: 20,
  x: 40,
  y: 42
}
    },
    {
      query: "logfile='/fluentd/PAN-GRA' parser = 'GRA' URL-Filename \n = * \n| group count = count() by URL-Filename \n| sort -count\n",
      title: "URL-Filename breakdown ",
      layout: {
  h: 14,
  w: 20,
  x: 40,
  y: 14
}
    },
    {
      breakdownFacet: "Destination_IP",
      graphStyle: "line",
      plots: [
        {
          facet: "rate",
          filter: "parser contains 'GRA'",
          label: "rate"
        }
      ],
      title: "Destination Ip Breakdown",
      layout: {
  h: 14,
  w: 20,
  x: 0,
  y: 56
}
    },
    {
      breakdownFacet: "Rule_Name",
      graphStyle: "line",
      plots: [
        {
          facet: "rate",
          filter: "parser contains 'GRA'",
          label: "rate"
        }
      ],
      title: "Rule Breaakdown",
      layout: {
  h: 14,
  w: 19,
  x: 1,
  y: 84
}
    },
    {
      breakdownFacet: "severity",
      graphStyle: "line",
      plots: [
  {
    facet: "rate",
    filter: "parser contains 'GRA' severity>=5",
    label: "rate"
  }
],
      title: "Severity breakdown",
      layout: {
  h: 14,
  w: 20,
  x: 20,
  y: 28
}
    },
    {
      barWidth: "5 minutes",
      breakdownFacet: "Virtual_System",
      graphStyle: "stacked_bar",
      plots: [
        {
          facet: "rate",
          filter: "parser contains 'GRA' severity>=5",
          label: "rate"
        }
      ],
      title: "Breakdown of Virtual Systems",
      yScale: "linear",
      layout: {
  h: 14,
  w: 19,
  x: 21,
  y: 98
}
    },
    {
      barWidth: "5 minutes",
      breakdownFacet: "Application",
      graphStyle: "stacked_bar",
      plots: [
        {
          facet: "p999(Bytes_Received)",
          filter: "(logfile='/fluentd/PAN-GRA')",
          label: "p999(Bytes_Received)"
        }
      ],
      title: "p99 Bytes Received",
      yScale: "linear",
      layout: {
  h: 14,
  w: 20,
  x: 40,
  y: 56
}
    },
    {
      barWidth: "1 minute",
      graphStyle: "stacked_bar",
      plots: [
        {
          filter: "action = 'ACCEPT'  dstaddr = * logfile='minecraft' serverHost='cloudwatch-630972250024'",
          label: "Rate"
        }
      ],
      title: "Flow Logs Accepted",
      yScale: "linear",
      layout: {
  h: 14,
  w: 20,
  x: 0,
  y: 98
}
    },
    {
      query: "panorama\n| filter destination_port = * source_port > 0 NOT(destination_port in (\"0\"))\n| group count = count(), bytes = sum(bytes)  by destination_port, source_port , source_country, destination_address\n| limit 10\n| let bytes_per_request = bytes/count\n| lookup d = description, s = service  from \"known_ports.csv\" by port=destination_port+\"\"\n| let description = d ? d : \"unknown port\" \n| let service = s ? s : \"unknown service\" \n| filter NOT(d = *) \n|columns source_country, destination_port, destination_address, bytes, description, service\n",
      title: "Traffic on Weird ports ",
      layout: {
  h: 14,
  w: 20,
  x: 40,
  y: 84
}
    },
    {
      graphStyle: "honeycomb",
      honeyCombColor: {
  hover: "#ED9F9B",
  label: "Red",
  value: "#DA372F"
},
      honeyCombGroupBy: "",
      honeyCombLinkTo: "/dash?page=Palo&filter=\"[source_address]\"",
      honeyCombThresholds: ["0", "10", "50", "1000"],
      query: "panorama\n| filter destination_port = * source_port > 0 NOT(destination_port in (\"0\"))\n| group bytes = sum(bytes)  by destination_port, source_port , source_country, destination_address, source_address\n| limit 100\n| lookup d = description, s = service  from \"known_ports.csv\" by port=destination_port+\"\"\n| let description = d ? d : \"unknown port\" \n| let service = s ? s : \"unknown service\" \n| filter NOT(d = *) \n|columns destination_port, destination_address, source_country, service, source_address, bytes",
      title: "Weird Ports",
      layout: {
  h: 14,
  w: 20,
  x: 20,
  y: 14
}
    },
    {
      query: "parser contains 'GRA' \n| group count = count() by  source_address   \n| sort -count\n|limit 20",
      title: "Top Source Addresses",
      graphStyle: "",
      maxPieSlices: 25,
      showBarsColumn: "false",
      layout: {
        h: 14,
        w: 20,
        x: 40,
        y: 98
      }
    },
    {
      query: "parser contains 'GRA' source_address=*\n| group count = count() by  source_address, source_country    \n| sort -count\n|limit 20",
      title: "Top Source Addresses",
      layout: {
  h: 14,
  w: 20,
  x: 0,
  y: 0
}
    }
  ],
  options: {}
}
